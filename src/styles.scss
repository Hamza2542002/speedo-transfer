// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use "@angular/material" as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the theme object.
$project-theme: mat.define-theme(
  (
    color: (
      theme-type: light,
      primary: mat.$azure-palette,
      tertiary: mat.$blue-palette,
    ),
    density: (
      scale: 0,
    ),
  )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
:root {
  @include mat.all-component-themes($project-theme);
}

// Comment out the line below if you want to use the pre-defined typography utility classes.
// For more information: https://material.angular.io/guide/typography#using-typography-styles-in-your-application.
// @include mat.typography-hierarchy($project-theme);

// Comment out the line below if you want to use the deprecated `color` inputs.
// @include mat.color-variants-backwards-compatibility($project-theme);
/* You can add global styles to this file, and also import other style files */
@import "styles/_variables";
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}
body {
  font-family: sans-serif;
}

ul {
  list-style: none;
  padding: 10px 5px;
}

a {
  text-decoration: none;
}

//Typography
h1 {
  font-size: 64px;
}

h2 {
  font-size: 52px;
}

h3 {
  font-size: 48px;
}

h1,
h2,
h3 {
  font-weight: 600;
}
p {
  font-size: 20px;
}
.sb {
  font-weight: 600;
}

.title-sm-0 {
  font-size: 32px;
  font-weight: 600;
}

.tilte-sm-2 {
  font-size: 24px;
}

.body {
  font-size: 16px;
}

.body-2 {
  font-size: 14px;
}

.body-m {
  font-size: 16px;
  font-weight: 400;
}

.sm {
  font-weight: 12px;
}

h1,
h2,
h3,
p {
  line-height: 150%;
}

// Primary colors
$primary-colors: (
  50: $color-primary-50,
  75: $color-primary-75,
  100: $color-primary-100,
  200: $color-primary-200,
  300: $color-primary-300,
  400: $color-primary-400,
  500: $color-primary-500,
);

// Secondary colors
$secondary-colors: (
  50: $color-secondary-50,
  75: $color-secondary-75,
  100: $color-secondary-100,
  200: $color-secondary-200,
  300: $color-secondary-300,
  400: $color-secondary-400,
  500: $color-secondary-500,
);

// Danger colors
$danger-colors: (
  200: $color-danger-200,
  300: $color-danger-300,
);

// Grey colors
$grey-colors: (
  0: $color-grey-0,
  10: $color-grey-10,
  20: $color-grey-20,
  30: $color-grey-30,
  40: $color-grey-40,
  50: $color-grey-50,
  60: $color-grey-60,
  70: $color-grey-70,
  80: $color-grey-80,
  90: $color-grey-90,
  100: $color-grey-100,
  200: $color-grey-200,
  300: $color-grey-300,
  400: $color-grey-400,
  500: $color-grey-500,
  600: $color-grey-600,
  700: $color-grey-700,
  800: $color-grey-800,
  900: $color-grey-900,
);

// Loop to generate text color classes
@each $name, $color in $primary-colors {
  .text-primary-#{$name} {
    color: $color;
  }
}

@each $name, $color in $secondary-colors {
  .text-secondary-#{$name} {
    color: $color;
  }
}

@each $name, $color in $danger-colors {
  .text-danger-#{$name} {
    color: $color;
  }
}

@each $name, $color in $grey-colors {
  .text-grey-#{$name} {
    color: $color;
  }
}
@each $name, $color in $primary-colors {
  .bg-primary-#{$name} {
    background-color: $color;
  }
}

@each $name, $color in $secondary-colors {
  .bg-secondary-#{$name} {
    background-color: $color;
  }
}

@each $name, $color in $danger-colors {
  .bg-danger-#{$name} {
    background-color: $color;
  }
}

@each $name, $color in $grey-colors {
  .bg-grey-#{$name} {
    background-color: $color;
  }
}

button {
  border: none;
  outline: none;
  cursor: pointer;
  padding: 10px 20px;
  border-radius: 8px;
}

button.btn-primary {
  background-color: $color-primary-300;
  color: $color-grey-0;
  border: 1px solid $color-primary-300;
}

button.btn-outlined {
  background-color: $color-grey-0;
  color: $color-grey-900;
  border: 1px solid $color-grey-900;
}

.btn-link {
  color: $color-primary-300;
  cursor: pointer;
}

.btn-group {
  display: flex;
  justify-content: flex-start;
  gap: 15px;
}

.container {
  max-width: 100%;
  margin: 0 auto;
  padding: 0 16px;
}

@media (min-width: 576px) {
  .container {
    max-width: 540px;
  }
}

@media (min-width: 768px) {
  .container {
    max-width: 720px;
  }
}

@media (min-width: 992px) {
  .container {
    max-width: 920px;
  }
}

.container-fluid {
  padding: 0 16px;
  max-width: 1440px;
  margin: 0 auto;
}

@media (min-width: 480px) {
  .container-fluid {
    max-width: 540px;
  }
}

@media (min-width: 576px) {
  .container-fluid {
    max-width: 720px;
  }
}

@media (min-width: 768px) {
  .container-fluid {
    max-width: 960px;
  }
}

@media (min-width: 992px) {
  .container-fluid {
    max-width: 1140px;
  }
}

@media (min-width: 1200px) {
  .container-fluid {
    max-width: 1600px;
  }
}

html,
body {
  height: 100%;
}
body {
  margin: 0;
  font-family: Roboto, "Helvetica Neue", sans-serif;
}
